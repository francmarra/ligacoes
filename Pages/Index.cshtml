@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script src="https://cdn.jsdelivr.net/npm/leader-line@1.0.7/leader-line.min.js"></script>

<script>
    const connections = [
        [0, 1, 1, 1, 1],
        [2, 3, 1, 3, 2],
        [3, 2, 2, 2, 1],
        [1, 3, 2, 1, 3],
        [2, 1, 3, 1, 2],
        [3, 3, 3, 2, 2],
        [1, 2, 3, 2, 1],
        [2, 2, 2, 3, 3]
    ];

    const colors = ['red', 'blue', 'green', 'orange', 'purple', 'teal', 'brown', 'magenta'];

    let currentLines = [];

    function clearLines() {
        currentLines.forEach(line => line.remove());
        currentLines = [];
    }

    function drawConnection(connection, color) {
        for (let i = 0; i < connection.length; i++) {
            if (connection[i] === 0 || connection[i + 1] === 0) continue;

            let start, end;
            if (i < 4) {
                start = document.getElementById(`cell-${i+1}${connection[i]}`);
                end = document.getElementById(`cell-${i+2}${connection[i+1]}`);
            } else {
                start = document.getElementById(`cell-${i}${connection[i]}`);
                end = document.getElementById(`cell-1${connection[0]}`);
            }

            if (start && end) {
                let line = new LeaderLine(start, end, {
                    path: 'straight',
                    endPlug: 'disc',
                    size: 2,
                    color: color
                });
                currentLines.push(line);
            }
        }
    }

    function drawConnections() {
        clearLines();
        const showAll = document.getElementById("showAll").checked;
        const selectedIndex = document.getElementById("connectionIndex").value;

        if (showAll) {
            connections.forEach((conn, index) => {
                const color = colors[index % colors.length];
                drawConnection(conn, color);
            });
        } else if (selectedIndex !== "") {
            const index = parseInt(selectedIndex);
            if (connections[index]) {
                const color = colors[index % colors.length];
                drawConnection(connections[index], color);
            }
        }
    }

    window.addEventListener('DOMContentLoaded', () => {
        const select = document.getElementById("connectionIndex");
        connections.forEach((_, index) => {
            const option = document.createElement("option");
            option.value = index;
            option.textContent = `Connection ${index}`;
            select.appendChild(option);
        });

        document.getElementById("showAll").addEventListener('change', (e) => {
            document.getElementById("connectionIndex").disabled = e.target.checked;
            drawConnections();
        });

        document.getElementById("connectionIndex").addEventListener('change', drawConnections);

        drawConnections();
    });
</script>

<style>
    .table-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* 2 columns */
        grid-template-rows: repeat(2, 1fr); /* 2 rows */
        gap: 100px 200px;
        width: 400px;
        height: auto;
    }

    .grid-item {
        border: 1px solid black;
        display: flex;
        flex-direction: column;
        justify-content: start;
        align-items: start;
        font-size: 24px;
        gap: 10px;
    }

    .cell {
        width: 100%;
        padding: 6px 0px;
        border-bottom: 1px solid black
    }
</style>

<div class="text-center">
    <label>
        <input type="checkbox" id="showAll" checked /> Show All
    </label>

    <label for="connectionIndex">Select Connection Index:</label>
    <select id="connectionIndex">
        <option value="" disabled selected>Select one</option>
    </select>

    <div class="table-container">
        <div class="table grid-item" id="table1">
            <div class="cell" id="cell-11">Cell 1</div>
            <div class="cell" id="cell-12">Cell 2</div>
            <div class="cell" id="cell-13">Cell 3</div>
        </div>
        <div class="table grid-item" id="table2">
            <div class="cell" id="cell-21">Cell 1</div>
            <div class="cell" id="cell-22">Cell 2</div>
            <div class="cell" id="cell-23">Cell 3</div>
        </div>
        <div class="table grid-item" id="table3">
            <div class="cell" id="cell-31">Cell 1</div>
            <div class="cell" id="cell-32">Cell 2</div>
            <div class="cell" id="cell-33">Cell 3</div>
        </div>
        <div class="table grid-item" id="table4">
            <div class="cell" id="cell-41">Cell 1</div>
            <div class="cell" id="cell-42">Cell 2</div>
            <div class="cell" id="cell-43">Cell 3</div>
        </div>
        <svg id="connections"></svg>
    </div>
</div>
